
#!/bin/bash

# ───────────── CONFIGURATION ─────────────

SERVER_URL="http://localhost:9000/"
DEST_DIR="/opt/exegol-update-client"

# ───────────── COULEURS ─────────────

BLUE="\033[1;34m"
GREEN="\033[1;32m"
RED="\033[1;31m"
YELLOW="\033[1;33m"
RESET="\033[0m"

info()    { echo -e "${BLUE}[*]${RESET} $1"; }
success() { echo -e "${GREEN}[+]${RESET} $1"; }
error()   { echo -e "${RED}[-]${RESET} $1"; }
prompt()  { echo -ne "${YELLOW}[?]${RESET} $1"; }
manual() {
    echo -e "${BLUE}[*]${RESET} Utilisation : $0 [options]\n"
    echo -e "${GREEN}DESCRIPTION${RESET}"
    echo -e "  Ce script permet de récupérer et charger automatiquement des images Docker Exegol au format .tar"
    echo -e "  depuis un serveur HTTP (Nginx) ou depuis un fichier local déjà téléchargé.\n"

    echo -e "${GREEN}COMPORTEMENT PAR DÉFAUT${RESET}"
    echo -e "  Si aucune option n’est fournie :"
    echo -e "    - Le script télécharge la dernière archive .tar disponible sur le serveur"
    echo -e "    - Il ne la télécharge que si elle n’est pas déjà présente localement"
    echo -e "    - Il la charge ensuite avec docker load\n"

    echo -e "${GREEN}OPTIONS DISPONIBLES${RESET}"
    echo -e "  ${YELLOW}--list${RESET}           Liste les fichiers .tar disponibles sur le serveur"
    echo -e "  ${YELLOW}--force${RESET}          Force le téléchargement même si le fichier est déjà présent"
    echo -e "  ${YELLOW}--load-only${RESET}      Charge une image Docker depuis un .tar déjà présent localement"
    echo -e "  ${YELLOW}--tag=nom:tag${RESET}     Re-tag l’image chargée et supprime l’originale (nécessite load)"
    echo -e "  ${YELLOW}-h, --help${RESET}        Affiche ce message d’aide et quitte"
    exit 0
}

# ───────────── PARSE ARGS ─────────────

LIST_MODE=false
FORCE_MODE=false
LOAD_ONLY_MODE=false
TAG_NAME=""

for arg in "$@"; do
    case "$arg" in
        --list) LIST_MODE=true ;;
        --force) FORCE_MODE=true ;;
        --load-only) LOAD_ONLY_MODE=true ;;
        --tag=*) TAG_NAME="${arg#*=}" ;;
        -h|--help) manual ;;
        *) ;;
    esac
done

# ───────────── MODE LOAD-ONLY ─────────────

mkdir -p "$DEST_DIR"

if $LOAD_ONLY_MODE; then
    info "Mode --load-only activé : recherche de fichiers locaux dans $DEST_DIR"

    LOCAL_TARS=$(find "$DEST_DIR" -type f -name '*.tar' | sort)
    if [ -z "$LOCAL_TARS" ]; then
        error "Aucun fichier .tar trouvé localement dans $DEST_DIR"
        exit 1
    fi

    echo
    info "Fichiers locaux disponibles :"
    echo "$LOCAL_TARS" | nl -w2 -s'. '

    prompt "Quel fichier souhaitez-vous charger ? (numéro) : "
    read -r SELECT_INDEX

    SELECTED_LOCAL=$(echo "$LOCAL_TARS" | sed -n "${SELECT_INDEX}p")

    if [ -z "$SELECTED_LOCAL" ]; then
        error "Sélection invalide. Abandon."
        exit 1
    fi

    info "Chargement de l’image Docker depuis $(basename "$SELECTED_LOCAL")..."
    LOAD_OUTPUT=$(docker load -i "$SELECTED_LOCAL" 2>&1) || {
        error "Échec du chargement Docker."
        exit 1
    }
    success "Image Docker chargée avec succès."
    echo "$LOAD_OUTPUT"

    if [[ -n "$TAG_NAME" ]]; then
        LOADED_NAME=$(echo "$LOAD_OUTPUT" | grep 'Loaded image:' | awk -F': ' '{print $2}')
        if [[ -z "$LOADED_NAME" ]]; then
            error "Impossible de déterminer le nom de l’image chargée."
        else
            docker tag "$LOADED_NAME" "$TAG_NAME" && success "Image retaggée en : $TAG_NAME"
            docker image rm "$LOADED_NAME" && success "Image originale supprimée : $LOADED_NAME"
        fi
    fi
    exit 0
fi

# ───────────── MODE SERVEUR ─────────────

info "Récupération de la liste des fichiers .tar sur le serveur..."
FILE_LIST=$(curl -s "$SERVER_URL/" | grep -oP 'href="[^"]+\.tar"' | cut -d'"' -f2)

if [ -z "$FILE_LIST" ]; then
    error "Aucun fichier .tar trouvé sur le serveur."
    exit 1
fi

if $LIST_MODE; then
    echo
    info "Fichiers disponibles :"
    echo "$FILE_LIST" | nl -w2 -s'. '

    prompt "Quel fichier souhaitez-vous récupérer ? (numéro) : "
    read -r FILE_NUMBER

    SELECTED_TAR=$(echo "$FILE_LIST" | sed -n "${FILE_NUMBER}p")

    if [ -z "$SELECTED_TAR" ]; then
        error "Numéro invalide. Aucun fichier sélectionné."
        exit 1
    fi

    TAR_NAME=$(basename "$SELECTED_TAR")
    TAR_URL="$SERVER_URL/$TAR_NAME"
else
    TAR_NAME=$(basename $(echo "$FILE_LIST" | sort -r | head -n 1))
    TAR_URL="$SERVER_URL/$TAR_NAME"
    info "Dernier fichier disponible : $TAR_NAME"
fi

LOCAL_PATH="$DEST_DIR/$TAR_NAME"

if [ -f "$LOCAL_PATH" ] && ! $FORCE_MODE; then
    info "Le fichier $TAR_NAME est déjà présent localement."
    info "Aucun chargement Docker ne sera effectué."
    exit 0
else
    prompt "Voulez-vous télécharger puis charger ce fichier ? (y/N) : "
    read -r CONFIRM_DL
    if [[ "$CONFIRM_DL" =~ ^[Yy]$ ]]; then
        info "Téléchargement de $TAR_NAME..."
        curl -fSL "$TAR_URL" -o "$LOCAL_PATH" || {
            error "Échec du téléchargement."
            exit 1
        }
        success "Téléchargement terminé."

        info "Chargement de l’image Docker depuis $TAR_NAME..."
        LOAD_OUTPUT=$(docker load -i "$LOCAL_PATH" 2>&1) || {
            error "Échec du chargement de l’image."
            exit 1
        }
        success "Image Docker chargée avec succès."
        echo "$LOAD_OUTPUT"

        if [[ -n "$TAG_NAME" ]]; then
            LOADED_NAME=$(echo "$LOAD_OUTPUT" | grep 'Loaded image:' | awk -F': ' '{print $2}')
            if [[ -z "$LOADED_NAME" ]]; then
                error "Impossible de déterminer le nom original de l’image."
            else
                docker tag "$LOADED_NAME" "$TAG_NAME" && success "Image retaggée en : $TAG_NAME"
                docker image rm "$LOADED_NAME" && success "Image originale supprimée : $LOADED_NAME"
            fi
        fi

        prompt "Voulez-vous supprimer le fichier $TAR_NAME après chargement ? (y/n) : "
        read -r CONFIRM_DELETE
        if [[ "$CONFIRM_DELETE" =~ ^[Yy]$ ]]; then
            rm -f "$LOCAL_PATH"
            success "Fichier supprimé."
        else
            info "Fichier conservé dans $DEST_DIR/"
        fi
    else
        info "Téléchargement annulé par l'utilisateur."
        exit 0
    fi
fi

