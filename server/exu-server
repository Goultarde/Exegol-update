#!/bin/bash

# ───────────── CONFIGURATION ─────────────

# Valeurs par défaut
EXEGOL_PATH='exegol'
REPO_DIR="/exu/exegol-images"
REPO_URL="https://github.com/ThePorgs/Exegol-images.git"
BRANCH="dev"
BUILD_PROFILE="full" # full=nightly sur la branche dev
IMAGE_NAME="server$BUILD_PROFILE"

# Gestion des options
FORCE_MODE=false

for arg in "$@"; do
    case "$arg" in
        --debug)
            REPO_URL="https://github.com/Goultarde/Exegol-images"
            BRANCH="main"
            BUILD_PROFILE="light"
            IMAGE_NAME="server$BUILD_PROFILE"
            echo "[DEBUG] Mode debug activé : repo Goultarde, branche main, profil light(-100MB)."
            ;;
        --force)
            FORCE_MODE=true
            echo "[FORCE] Mode force activé : build forcé même sans nouveau commit."
            ;;
        -h|--help)
            echo "Usage : $0 [--debug] [--force] [-h|--help]"
            echo
            echo "  --debug      Utilise le dépôt Goultarde, branche main, profil light (mode test)"
            echo "  --force      Force le build même sans nouveau commit détecté"
            echo "  -h, --help   Affiche cette aide"
            exit 0
            ;;
        *) ;;
    esac
done

TARPATH="/exu/exegol-update-server/exu-tars"
TAR_OUTPUT="${TARPATH}/exegol-${BUILD_PROFILE}-$(date +%Y%m%d).tar"
CHECKSUM_FILE="${TARPATH}/latest_commit.hash"
LOGPATH=/exu/exegol-update-server/exu-logs
LOGFILE="${LOGPATH}/exu_$(date '+%F %T').log"
mkdir -p $LOGPATH
mkdir -p $TARPATH

# ───────────── LOGGER ─────────────

log() {
    echo "[$(date '+%F %T')] $*" | tee -a "$LOGFILE"
}

# ───────────── CLONE/UPDATE REPO ─────────────

update_repo() {
    if [ ! -d "$REPO_DIR" ]; then
        log "Cloning Exegol-images repository..."
        git clone --branch "$BRANCH" "$REPO_URL" "$REPO_DIR"
    else
        log "Pulling latest changes..."
        cd "$REPO_DIR" && git fetch origin "$BRANCH" && git reset --hard origin/"$BRANCH"
    fi
}

# ───────────── DETECT CHANGES ─────────────

detect_changes() {
    cd "$REPO_DIR" || exit 1
    LATEST_COMMIT=$(git rev-parse HEAD)
    if [ -f "$CHECKSUM_FILE" ]; then
        PREV_COMMIT=$(cat "$CHECKSUM_FILE")
        if [ "$LATEST_COMMIT" = "$PREV_COMMIT" ] && [ "$FORCE_MODE" = false ]; then
            log "No updates found on dev branch. Exiting."
            exit 0
        elif [ "$FORCE_MODE" = true ]; then
            log "Force mode enabled: building despite no new commits detected."
        fi
    fi
    echo "$LATEST_COMMIT" > "$CHECKSUM_FILE"
}

# ───────────── BUILD IMAGE ─────────────

build_exegol() {
    log "Starting Exegol build for profile: $BUILD_PROFILE"

    # Forcer le dossier d'export à exister
    mkdir -p "$(dirname "$CHECKSUM_FILE")"
    echo "$LATEST_COMMIT" > "$CHECKSUM_FILE"

    # Appel automatique avec profil
    "$EXEGOL_PATH" build $IMAGE_NAME $BUILD_PROFILE --build-path "$REPO_DIR/" --build-log "$LOGFILE" || {
        log "Build failed!"
        exit 1
    }
}


# ───────────── EXPORT IMAGE ─────────────

export_image() {
    mkdir -p "$(dirname "$TAR_OUTPUT")"
    docker save -o "$TAR_OUTPUT" "nwodtuhs/exegol:$IMAGE_NAME"
    chmod -R o+r $TARPATH
    log "Docker image saved to $TAR_OUTPUT"
    # Suppression de l'image locale après export
    docker rmi "nwodtuhs/exegol:$IMAGE_NAME" >/dev/null && log "Image locale nwodtuhs/exegol:$IMAGE_NAME supprimée après export."
}

# ───────────── RUN WRAPPER ─────────────

main() {
    update_repo
    detect_changes
    build_exegol
    export_image
    log "✅ Exegol update pipeline completed."
}

main

